import streamlit as st
import joblib
import numpy as np

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏•‡∏∞ StandardScaler
model = joblib.load("obesity_weight_predictor.pkl")
scaler = joblib.load("scaler.pkl")

def show_app2():
    # UI ‡∏Ç‡∏≠‡∏á Streamlit
    st.title("üéØ Obesity-Based Weight Predictor")
    st.write("‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ **‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (Weight)**")

    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Gender (0 = Female, 1 = Male)
    gender = st.selectbox("Gender", ["Female", "Male"])
    gender_value = 1 if gender == "Male" else 2

    # ‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á (Height in meters)
    height = st.number_input("Height (meters)", min_value=1.0, max_value=2.5, step=0.01)

    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö Obesity (‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)
    obesity_levels = {
        "Insufficient Weight": 0,
        "Normal Weight": 1,
        "Overweight Level I": 2,
        "Overweight Level II": 3,
        "Obesity Type I": 4,
        "Obesity Type II": 5,
        "Obesity Type III": 6
    }
    obesity = st.selectbox("Obesity Level", list(obesity_levels.keys()))
    obesity_value = obesity_levels[obesity]

    # ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    if st.button("Predict Weight"):
        # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
        input_data = np.array([[gender_value, height, obesity_value]])
        input_scaled = scaler.transform(input_data)

        # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
        predicted_weight = model.predict(input_scaled)

        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        st.success(f"üìå Predicted Weight: {predicted_weight[0]:.2f} kg")

